name: Build and deploy website to GitHub Pages

on:
  push:
    branches: [ master ] # Runs on pushes targeting the default branch
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      SPHINX_DEBUG: 1
    outputs:
      HAS_PAGES: ${{ steps.has-pages.outputs.HAS_PAGES }}
    steps:
      - uses: actions/checkout@v4

      - name: Set HAS_PAGES to output
        id: has-pages
        run: echo "HAS_PAGES=$(gh api repos/${{ github.repository }} --jq .has_pages)" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip' # caching pip dependencies

      - name: Setup Pages
        uses: actions/configure-pages@v5
        if: github.ref == 'refs/heads/master' && steps.has-pages.outputs.HAS_PAGES == 'true'

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: doc/build/html
          key: ${{ runner.os }}-sphinx-${{ hashFiles('**/doc/source/**/*.rst') }}
          restore-keys: |
            ${{ runner.os }}-sphinx-

      - run: pip install . -r doc/requirements.txt

      - run: sphinx-build -M html ./doc/source ./doc/build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: github.ref == 'refs/heads/master' && steps.has-pages.outputs.HAS_PAGES == 'true'
        with:
          path: doc/build/html

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' && needs.build.outputs.HAS_PAGES == 'true'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
